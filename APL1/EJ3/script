#! /bin/bash

#TODO --help: show n exit
while getopts ":c:a:s:" param; do
    case $param in
        c)
            c=$OPTARG;; #Directorio a monitorear cambios
            #func Monitorear(c);;
        a)
            a=$OPTARG;;
        s)
            s=$OPTARG;;
        *)
            echo "$param not valid";;
    esac
done

actionHandler() {
    ACTIONS=()
    while read IN; do
        echo "input from pipe $IN"
    done

    IFS=',' read -r -a ACTIONS <<< "$a";
    echo "Actions: ${ACTIONS[*]}"

    if [[ "${ACTIONS[*]}" =~ "listar" ]]; then
        listar $c;
    fi
    
    if [[ "${ACTIONS[*]}" =~ "peso" ]]; then
        peso $c;
    fi

    if [[ "${ACTIONS[*]}" =~ "compilar" ]]; then
        compilar $c; 
        if [[ "${ACTIONS[*]}" =~ "publicar" ]]; then
            publicar $s;
        fi
    fi
}

listar() {
    echo "call listar"
    find $1 -type f -name '*.txt'
}

peso() { echo "peso call $1"; }

compilar() {
    echo "call compilar"
    #if file exist remove
    if [[ -e ./bin/output.txt ]]; then
        rm ./bin/output.txt
    fi
    #create output file
    mkdir -p ./bin
    touch ./bin/output.txt
    
    find $1 -type f -name '*.txt' -exec cat {} + >> './bin/output.txt';
    CAN_PUSH=true #TODO: Usar pipe en vez de booleano
}

publicar() {
    echo "call publicar"
    cp ./bin/output.txt $1;
}
echo "Parametros $c $a $s";
#notify creados,modificados,renombrados,borrados
#inotify -m $c -e create,modify,delete | actionHandler
cat demon_input | actionHandler
