#! /bin/bash

#TODO --help: show n exit

helper() {
    echo "Helper output"
}

ACTIONS=()

while getopts ":c:a:s:" param; do
    case $param in
        c)
            c=$OPTARG;; #Directorio a monitorear cambios
        a)
            a=$OPTARG #Acciones a tomar con los cambios
            IFS=',' read -r -a ACTIONS <<< "$a";;
        s)
            s=$OPTARG;; #Directorio de salida
        *)
            helper;;
    esac
done

unset IFS;

actionHandler() {
    echo "Enterin actionHandler"
    FILESNAME=()

    while read IN; do
        if [[ "$IN" == *"$c"* ]]; then
            echo "agregando al filesname $IN";
            FILESNAME+=($(echo "$IN" | awk '{print $1$3}'))
        else
            echo "daemon output $IN"
        fi
    done

    echo "Filesname ${FILESNAME[@]}"
    
    if [ ${#FILESNAME[@]} -eq 0 ]; then
        echo "No files"
    else
        if [[ "${ACTIONS[*]}" =~ "listar" ]]; then
            listar FILESNAME
        fi
    
        if [[ "${ACTIONS[*]}" =~ "peso" ]]; then
            peso FILESNAME
        fi

        if [[ "${ACTIONS[*]}" =~ "compilar" ]]; then
            compilar $c; 
            if [[ "${ACTIONS[*]}" =~ "publicar" ]]; then
                publicar $s;
            fi
        fi

    fi
    exit
}

listar() {
    local -n files=$1
    echo "Listar call"

    for i in "${files[@]}"; do
        echo "file: $i"
    done
}

peso() {
    local -n files=$1
    echo "peso call"

    for i in "${files[@]}"; do
        if test -f "$i"; then
            wc -c < "$i"
        fi
    done
}

compilar() {
    echo "call compilar"
    #if file exist remove
    if [[ -e ./bin/output.txt ]]; then
        rm ./bin/output.txt
    fi
    #create output file
    mkdir -p ./bin
    touch ./bin/output.txt
    
    find $1 -type f -name '*' -exec cat {} + >> './bin/output.txt';
}

publicar() {
    echo "call publicar"
    cp ./bin/output.txt $1;
}
echo "Parametros $c $a $s";
#notify creados,modificados,renombrados,borrados
#d_pipe="./daemonOutput" 
#if [ ! -p $d_pipe ]; then
#    mkfifo "$d_pipe"
#fi

inotifywait -m -r -e create,modify,delete $c | actionHandler &

#cat demon_output | actionHandler
