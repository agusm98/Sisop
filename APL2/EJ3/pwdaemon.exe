Param(
    [Parameter(Mandatory=$true)]
    [string] $codigo,

    [Parameter(Mandatory=$true)]
    [string] $acciones,
    
    [Parameter]
    [string] $salida
)

function Compile() {
    Param(
        [string] $rootPath
    )
    Write-Host "Se compilan los archivos de $rootPath en ./bin/output"    
    Get-ChildItem -Path $rootPath -Recurse | Get-Content | Out-File ( New-Item -Path "./bin/output" -Force )
}

function Publish() {
    Param(
        [string] $output
    )
}

$daemon = New-Object -TypeName System.IO.FileSystemWatcher -Property @{
    Path = $codigo
    IncludeSubdirectories = $true
}

$actionHandler = {
    $actions = $acciones.Split(',')
    $details = $event.SourceEventArgs
    $Name = $details.Name
    $FullPath = $details.FullPath
    $Path = $details.Path
    $Size = (Get-Item $FullPath).length
    $OldName = $details.OldName
    
    if ($actions.Contains('listar')) {
        Write-Host "File: $Name"
    }
    
    if ($actions.Contains('peso')) {
        Write-Host "Size: $Size"
    }
    
    if ($actions.Contains('compilar')) {
        Compile $codigo
        <#
        if($actions.Contains("publicar")) {
            Publish $pushPath
        }
        #>
    }
    
}

$handlers = . {
    Register-ObjectEvent -InputObject $daemon -EventName Created -Action $actionHandler
    Register-ObjectEvent -InputObject $daemon -EventName Changed -Action $actionHandler
    Register-ObjectEvent -InputObject $daemon -EventName Deleted -Action $actionHandler
    Register-ObjectEvent -InputObject $daemon -EventName Renamed -Action $actionHandler
}

$daemon.EnableRaisingEvents = $true
Write-Host "Daemon esta vivo! Escuchando $codigo"

while($true) {
    Wait-Event -Timeout 1
}

finally
{
    $daemon.EnableRaisingEvents = $false
    $handlers | ForEach-Object {
        Unregister-Event -SourceIdentifier $_.Name
    }

    $handlers | Remove-Jod

    $daemon.Dispose()

    Write-Warning "Gracias, vuelva prontos"
}
