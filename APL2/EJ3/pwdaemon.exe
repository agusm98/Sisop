Param(
    [Parameter(Mandatory=$true)]
    [string] $codigo,

    [Parameter(Mandatory=$true)]
    [ValidateSet("listar", "peso", "compilar", "publicar")]
    [string[]] $acciones,
    
    [Parameter]
    [string] $salida
)

function execActions() {
    Param(
        [string[]] $actions,
        [string] $fileName,
        [string] $fileSize,
        [string] $rootPath,
        [string] $pushPath
    )

    if ($actions.Contains("listar")) {
        Write-Host "File: {0}" -f $fileName
    }
    if ($actions.Contains("peso")) {
        Write-Host "Size: {0}" -f $fileSize
    }
    if ($actions.Contains("compilar")) {
        Compile $rootPath
        if($actions.Contains("publicar")) {
            Publish $pushPath
        }
    }
}

function Compile() {
    Param(
        [string] $rootPath
    )
}

function Publish() {
    Param(
        [string] $output
    )
}

$daemon = New-Object -TypeName System.IO.FileSystemWatcher -Property @{
    Path = $codigo
    IncludeSubdirectories = $true
}

$actionHandler = {
    $details = $event.SourceEventArgs
    $Name = $details.Name
    $FullPath = $details.FullPath
    $Size = (Get-Item $FullPath).length
    $OldName = $details.OldName

    $ChangeType = $details.ChangeType

    switch ($ChangeType)
    {
        'Changed' {
            Write-Host "File {0} was modified with new size {1}" -f $Name, $Size
        }
        'Created' {
            Write-Host "New file {0} created" -f $Name
        }
        'Deleted' {
            Write-Host "File {0} was deleted" -f $OldName
        }
        'Renamed' {
            Write-Host "File {0} was renamed to {1}" -f $OldName, $Name
        }
    }
}

$handlers = . {
    Register-ObjectEvent -InputObject $daemon -EventName Created -Action $actionHandler
    Register-ObjectEvent -InputObject $daemon -EventName Changed -Action $actionHandler
    Register-ObjectEvent -InputObject $daemon -EventName Deleted -Action $actionHandler
    Register-ObjectEvent -InputObject $daemon -EventName Renamed -Action $actionHandler
}

$daemon.EnableRaisingEvents = $true
Write-Host "Daemon esta vivo! Escuchando $Path"

while($true) {
    Wait-Event -Timeout 1
}

finally
{
    $daemon.EnableRaisingEvents = $false
    $handlers | ForEach-Object {
        Unregister-Event -SourceIdentifier $_.Name
    }

    $handlers | Remove-Jod

    $daemon.Dispose()

    Write-Warning "Gracias, vuelva prontos"
}
